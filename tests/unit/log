if test ! -d /project/fun/bmk/bmk/tests/unit/build; then mkdir -p /project/fun/bmk/bmk/tests/unit/build; fi
make -j24 BUILD=true UNIT_TEST_DIR=/project/fun/bmk/bmk/tests/unit \
	-C /project/fun/bmk/bmk/tests/unit/build -f /project/fun/bmk/bmk/tests/unit/Makefile _run
make[1]: Entering directory `/project/fun/bmk/bmk/tests/unit/build'
./unittest --gtest_filter=smoke.dualcore_2thread_pingpong
Running main() from gtest_main.cc
Note: Google Test filter = smoke.dualcore_2thread_pingpong
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from smoke
[ RUN      ] smoke.dualcore_2thread_pingpong
dualcore_2thread_pingpong
--> bmk_pthread_main(2)
--> Create core1
<-- Create core1
--> bmk_int_release_nonprimary_cores
<-- bmk_int_release_nonprimary_cores
--> wait unlock procid=1
<-- wait unlock procid=1
--> call non-zero main procid=1
--> bmk_main
--> bmk_scheduler_nonprimary()
--> bmk_simple_scheduler_get_next_thread
  t=0x1e6e440 procmask=0x00000002 procid=1
<-- bmk_simple_scheduler_get_next_thread 0x1e6e440
--> bmk_scheduler_nonprimary::wait_proc_event
--> bmk_sys_wait_proc_event
--> bmk_scheduler_thread_new(0x7ffe5dbd2690)
<-- bmk_scheduler_thread_new()
--> bmk_scheduler_thread_new(0x7ffe5dbd22c0)
<-- bmk_scheduler_thread_new()
--> bmk_thread_join: 0x7ffe5dbd2690 1
--> bmk_scheduler_reschedule core=0 active=0x1e6dff0
t=0x7ffe5dbd22c0 next=0x7ffe5dbd2690
head t=0x7ffe5dbd2690
  t=0x7ffe5dbd22c0 mask=0x00000002
  t=0x7ffe5dbd2690 mask=0x00000001
  t=0x1e6dff0 mask=0x00000001
--> bmk_simple_scheduler_get_next_thread
  t=0x7ffe5dbd22c0 procmask=0x00000002 procid=0
  t=0x7ffe5dbd2690 procmask=0x00000001 procid=0
<-- bmk_simple_scheduler_get_next_thread 0x7ffe5dbd2690
  next_thread=0x7ffe5dbd2690 (active_t=0x1e6dff0)
--> bmk_sys_send_proc_event
<-- bmk_sys_send_proc_event
SWAP: 0x1e6dff0 => 0x7ffe5dbd2690
--> dualcore_2thread_pingpong_func1()
--> thread1 send req
--> bmk_mutex_lock 0x661960
<-- bmk_sys_wait_proc_event
<-- bmk_mutex_lock 0x661960
<-- bmk_scheduler_nonprimary::wait_proc_event
--> bmk_cond_signal cond=0x661980
<-- bmk_cond_signal cond=0x661980
--> bmk_mutex_unlock 0x661960
<-- bmk_mutex_unlock 0x661960
<-- thread1 send req
--> thread1 wait ack
--> bmk_mutex_lock 0x661990
<-- bmk_mutex_lock 0x661990
--> bmk_cond_wait cond=0x6619b0
--> bmk_mutex_unlock 0x661990
t=0x7ffe5dbd22c0 next=0x1e6dff0
head t=0x1e6dff0
--> bmk_simple_scheduler_get_next_thread
<-- bmk_mutex_unlock 0x661990
  t=0x7ffe5dbd22c0 procmask=0x00000002 procid=1
<-- bmk_simple_scheduler_get_next_thread 0x7ffe5dbd22c0
--> bmk_scheduler_nonprimary::SWAP
--> bmk_scheduler_thread_block proc=0 thread=0x7ffe5dbd2690
--> bmk_simple_scheduler_get_next_thread
  t=0x1e6dff0 procmask=0x00000001 procid=0
-- dualcore_2thread_pingpong_func2()
<-- bmk_simple_scheduler_get_next_thread 0x1e6dff0
--> thread2 wait req
EXIT SWAP: 0x7ffe5dbd2690 => 0x1e6dff0
--> bmk_mutex_lock 0x661960
<-- bmk_scheduler_reschedule core=0
<-- bmk_mutex_lock 0x661960
--> bmk_scheduler_reschedule core=0 active=0x1e6dff0
--> bmk_mutex_unlock 0x661960
head t=0x1e6e440
  t=0x1e6e440 mask=0x00000002
  t=0x1e6dff0 mask=0x00000001
--> bmk_simple_scheduler_get_next_thread
  t=0x1e6e440 procmask=0x00000002 procid=0
  t=0x1e6dff0 procmask=0x00000001 procid=0
<-- bmk_simple_scheduler_get_next_thread 0x1e6dff0
  next_thread=0x1e6dff0 (active_t=0x1e6dff0)
--> reschedule: bmk_sys_wait_proc_event
--> bmk_sys_wait_proc_event
<-- bmk_mutex_unlock 0x661960
<-- thread2 wait req
--> thread2 send ack
--> bmk_mutex_lock 0x661990
<-- bmk_mutex_lock 0x661990
--> bmk_cond_signal cond=0x6619b0
--> bmk_scheduler_thread_unblock
--> bmk_sys_send_proc_event
<-- bmk_sys_send_proc_event
<-- bmk_scheduler_thread_unblock
<-- bmk_cond_signal cond=0x6619b0
--> bmk_mutex_unlock 0x661990
<-- bmk_mutex_unlock 0x661990
<-- thread2 send ack
--> thread2 wait req
--> bmk_mutex_lock 0x661960
<-- bmk_mutex_lock 0x661960
--> bmk_cond_wait cond=0x661980
--> bmk_mutex_unlock 0x661960
<-- bmk_sys_wait_proc_event
<-- bmk_mutex_unlock 0x661960
<-- reschedule: bmk_sys_wait_proc_event
--> bmk_scheduler_thread_block proc=1 thread=0x7ffe5dbd22c0
--> bmk_simple_scheduler_get_next_thread
  t=0x7ffe5dbd2690 procmask=0x00000001 procid=1
  t=0x1e6e440 procmask=0x00000002 procid=1
<-- bmk_scheduler_reschedule core=0
--> bmk_scheduler_reschedule core=0 active=0x1e6dff0
<-- bmk_simple_scheduler_get_next_thread 0x1e6e440
EXIT SWAP: 0x7ffe5dbd22c0 => 0x1e6e440
head t=0x7ffe5dbd2690
  t=0x7ffe5dbd2690 mask=0x00000001
  t=0x1e6dff0 mask=0x00000001
--> bmk_simple_scheduler_get_next_thread
  t=0x7ffe5dbd2690 procmask=0x00000001 procid=0
<-- bmk_simple_scheduler_get_next_thread 0x7ffe5dbd2690
  next_thread=0x7ffe5dbd2690 (active_t=0x1e6dff0)
--> bmk_sys_send_proc_event
<-- bmk_sys_send_proc_event
SWAP: 0x1e6dff0 => 0x7ffe5dbd2690
<-- bmk_scheduler_thread_block proc=0 thread=0x7ffe5dbd2690
--> bmk_mutex_lock 0x661990
<-- bmk_scheduler_nonprimary::SWAP
<-- bmk_mutex_lock 0x661990
head t=0x1e6dff0
<-- bmk_cond_wait cond=0x6619b0
--> bmk_mutex_unlock 0x661990
<-- bmk_mutex_unlock 0x661990
--> bmk_mutex_lock 0x661990
<-- bmk_mutex_lock 0x661990
--> bmk_mutex_unlock 0x661990
<-- bmk_mutex_unlock 0x661990
<-- thread1 wait ack
--> thread1 send req
--> bmk_mutex_lock 0x661960
<-- bmk_mutex_lock 0x661960
--> bmk_cond_signal cond=0x661980
--> bmk_scheduler_thread_unblock
--> bmk_sys_send_proc_event
<-- bmk_sys_send_proc_event
<-- bmk_scheduler_thread_unblock
<-- bmk_cond_signal cond=0x661980
--> bmk_simple_scheduler_get_next_thread
  t=0x7ffe5dbd22c0 procmask=0x00000002 procid=1
<-- bmk_simple_scheduler_get_next_thread 0x7ffe5dbd22c0
--> bmk_scheduler_nonprimary::SWAP
<-- bmk_scheduler_thread_block proc=1 thread=0x7ffe5dbd22c0
--> bmk_mutex_lock 0x661960
--> bmk_mutex_unlock 0x661960
--> bmk_scheduler_thread_block proc=1 thread=0x7ffe5dbd22c0
--> bmk_simple_scheduler_get_next_thread
  t=0x1e6dff0 procmask=0x00000001 procid=1
  t=0x1e6e440 procmask=0x00000002 procid=1
--> bmk_scheduler_thread_unblock
<-- bmk_simple_scheduler_get_next_thread 0x1e6e440
EXIT SWAP: 0x7ffe5dbd22c0 => 0x1e6e440
<-- bmk_scheduler_nonprimary::SWAP
t=0x7ffe5dbd22c0 next=0x1e6dff0
head t=0x1e6dff0
--> bmk_simple_scheduler_get_next_thread
  t=0x7ffe5dbd22c0 procmask=0x00000002 procid=1
--> bmk_sys_send_proc_event
<-- bmk_simple_scheduler_get_next_thread 0x7ffe5dbd22c0
--> bmk_scheduler_nonprimary::SWAP
<-- bmk_scheduler_thread_block proc=1 thread=0x7ffe5dbd22c0
<-- bmk_sys_send_proc_event
<-- bmk_scheduler_thread_unblock
<-- bmk_mutex_lock 0x661960
<-- bmk_mutex_unlock 0x661960
<-- thread1 send req
--> thread1 wait ack
--> bmk_mutex_lock 0x661990
<-- bmk_mutex_lock 0x661990
--> bmk_cond_wait cond=0x6619b0
--> bmk_mutex_unlock 0x661990
<-- bmk_mutex_unlock 0x661990
--> bmk_scheduler_thread_block proc=0 thread=0x7ffe5dbd2690
--> bmk_simple_scheduler_get_next_thread
  t=0x1e6dff0 procmask=0x00000001 procid=0
<-- bmk_simple_scheduler_get_next_thread 0x1e6dff0
EXIT SWAP: 0x7ffe5dbd2690 => 0x1e6dff0
<-- bmk_cond_wait cond=0x661980
--> bmk_mutex_unlock 0x661960
<-- bmk_scheduler_reschedule core=0
<-- bmk_mutex_unlock 0x661960
--> bmk_scheduler_reschedule core=0 active=0x1e6dff0
head t=0x1e6e440
  t=0x1e6e440 mask=0x00000002
--> bmk_mutex_lock 0x661960
<-- bmk_mutex_lock 0x661960
  t=0x1e6dff0 mask=0x00000001
--> bmk_mutex_unlock 0x661960
<-- bmk_mutex_unlock 0x661960
<-- thread2 wait req
--> thread2 send ack
--> bmk_mutex_lock 0x661990
--> bmk_simple_scheduler_get_next_thread
<-- bmk_mutex_lock 0x661990
--> bmk_cond_signal cond=0x6619b0
  t=0x1e6e440 procmask=0x00000002 procid=0
--> bmk_scheduler_thread_unblock
  t=0x1e6dff0 procmask=0x00000001 procid=0
<-- bmk_simple_scheduler_get_next_thread 0x1e6dff0
  next_thread=0x1e6dff0 (active_t=0x1e6dff0)
--> reschedule: bmk_sys_wait_proc_event
--> bmk_sys_wait_proc_event
--> bmk_sys_send_proc_event
<-- bmk_sys_send_proc_event
<-- bmk_scheduler_thread_unblock
<-- bmk_cond_signal cond=0x6619b0
--> bmk_mutex_unlock 0x661990
<-- bmk_sys_wait_proc_event
<-- bmk_mutex_unlock 0x661990
<-- reschedule: bmk_sys_wait_proc_event
<-- bmk_scheduler_reschedule core=0
--> bmk_scheduler_reschedule core=0 active=0x1e6dff0
t=0x7ffe5dbd2690 next=0x1e6e440
head t=0x1e6e440
  t=0x7ffe5dbd2690 mask=0x00000001
  t=0x1e6e440 mask=0x00000002
<-- thread2 send ack
  t=0x1e6dff0 mask=0x00000001
--> bmk_simple_scheduler_get_next_thread
  t=0x7ffe5dbd2690 procmask=0x00000001 procid=0
<-- bmk_simple_scheduler_get_next_thread 0x7ffe5dbd2690
  next_thread=0x7ffe5dbd2690 (active_t=0x1e6dff0)
--> bmk_sys_send_proc_event
<-- bmk_sys_send_proc_event
SWAP: 0x1e6dff0 => 0x7ffe5dbd2690
<-- bmk_scheduler_thread_block proc=0 thread=0x7ffe5dbd2690
--> bmk_mutex_lock 0x661990
<-- bmk_mutex_lock 0x661990
<-- bmk_cond_wait cond=0x6619b0
--> bmk_mutex_unlock 0x661990
<-- bmk_mutex_unlock 0x661990
--> bmk_mutex_lock 0x661990
<-- bmk_mutex_lock 0x661990
--> bmk_mutex_unlock 0x661990
<-- bmk_mutex_unlock 0x661990
<-- thread1 wait ack
--> thread1 send req
--> bmk_mutex_lock 0x661960
<-- bmk_mutex_lock 0x661960
--> bmk_cond_signal cond=0x661980
<-- bmk_cond_signal cond=0x661980
--> bmk_mutex_unlock 0x661960
<-- bmk_mutex_unlock 0x661960
<-- thread1 send req
--> thread1 wait ack
--> bmk_mutex_lock 0x661990
--> thread2 wait req
--> bmk_mutex_lock 0x661960
<-- bmk_mutex_lock 0x661990
<-- bmk_mutex_lock 0x661960
--> bmk_mutex_unlock 0x661960
<-- bmk_mutex_unlock 0x661960
--> bmk_cond_wait cond=0x6619b0
<-- thread2 wait req
--> bmk_mutex_unlock 0x661990
<-- bmk_mutex_unlock 0x661990
--> bmk_scheduler_thread_block proc=0 thread=0x7ffe5dbd2690
--> thread2 send ack
--> bmk_simple_scheduler_get_next_thread
  t=0x1e6e440 procmask=0x00000002 procid=0
  t=0x1e6dff0 procmask=0x00000001 procid=0
--> bmk_mutex_lock 0x661990
<-- bmk_simple_scheduler_get_next_thread 0x1e6dff0
<-- bmk_mutex_lock 0x661990
--> bmk_cond_signal cond=0x6619b0
EXIT SWAP: 0x7ffe5dbd2690 => 0x1e6dff0
--> bmk_scheduler_thread_unblock
<-- bmk_scheduler_reschedule core=0
--> bmk_sys_send_proc_event
--> bmk_scheduler_reschedule core=0 active=0x1e6dff0
<-- bmk_sys_send_proc_event
<-- bmk_scheduler_thread_unblock
<-- bmk_cond_signal cond=0x6619b0
t=0x7ffe5dbd2690 next=0x1e6e440
--> bmk_mutex_unlock 0x661990
head t=0x1e6e440
<-- bmk_mutex_unlock 0x661990
  t=0x7ffe5dbd2690 mask=0x00000001
<-- thread2 send ack
--> thread2 wait req
--> bmk_mutex_lock 0x661960
<-- bmk_mutex_lock 0x661960
--> bmk_cond_wait cond=0x661980
  t=0x1e6e440 mask=0x00000002
--> bmk_mutex_unlock 0x661960
  t=0x1e6dff0 mask=0x00000001
--> bmk_simple_scheduler_get_next_thread
  t=0x7ffe5dbd2690 procmask=0x00000001 procid=0
<-- bmk_simple_scheduler_get_next_thread 0x7ffe5dbd2690
  next_thread=0x7ffe5dbd2690 (active_t=0x1e6dff0)
<-- bmk_mutex_unlock 0x661960
--> bmk_scheduler_thread_block proc=1 thread=0x7ffe5dbd22c0
--> bmk_sys_send_proc_event
--> bmk_simple_scheduler_get_next_thread
<-- bmk_sys_send_proc_event
SWAP: 0x1e6dff0 => 0x7ffe5dbd2690
  t=0x1e6e440 procmask=0x00000002 procid=1
<-- bmk_scheduler_thread_block proc=0 thread=0x7ffe5dbd2690
<-- bmk_simple_scheduler_get_next_thread 0x1e6e440
EXIT SWAP: 0x7ffe5dbd22c0 => 0x1e6e440
<-- bmk_scheduler_nonprimary::SWAP
head t=0x1e6dff0
--> bmk_simple_scheduler_get_next_thread
  t=0x1e6dff0 procmask=0x00000001 procid=1
  t=0x1e6e440 procmask=0x00000002 procid=1
<-- bmk_simple_scheduler_get_next_thread 0x1e6e440
--> bmk_mutex_lock 0x661990
--> bmk_scheduler_nonprimary::wait_proc_event
<-- bmk_mutex_lock 0x661990
<-- bmk_cond_wait cond=0x6619b0
--> bmk_mutex_unlock 0x661990
<-- bmk_mutex_unlock 0x661990
--> bmk_mutex_lock 0x661990
<-- bmk_mutex_lock 0x661990
--> bmk_mutex_unlock 0x661990
<-- bmk_mutex_unlock 0x661990
<-- thread1 wait ack
--> thread1 send req
--> bmk_mutex_lock 0x661960
<-- bmk_mutex_lock 0x661960
--> bmk_cond_signal cond=0x661980
--> bmk_scheduler_thread_unblock
--> bmk_sys_wait_proc_event
--> bmk_sys_send_proc_event
<-- bmk_sys_send_proc_event
<-- bmk_scheduler_thread_unblock
<-- bmk_cond_signal cond=0x661980
--> bmk_mutex_unlock 0x661960
<-- bmk_mutex_unlock 0x661960
<-- thread1 send req
--> thread1 wait ack
<-- bmk_sys_wait_proc_event
--> bmk_mutex_lock 0x661990
<-- bmk_scheduler_nonprimary::wait_proc_event
t=0x7ffe5dbd22c0 next=0x1e6dff0
<-- bmk_mutex_lock 0x661990
--> bmk_cond_wait cond=0x6619b0
--> bmk_mutex_unlock 0x661990
head t=0x1e6dff0
--> bmk_simple_scheduler_get_next_thread
  t=0x7ffe5dbd22c0 procmask=0x00000002 procid=1
<-- bmk_simple_scheduler_get_next_thread 0x7ffe5dbd22c0
--> bmk_scheduler_nonprimary::SWAP
<-- bmk_scheduler_thread_block proc=1 thread=0x7ffe5dbd22c0
--> bmk_mutex_lock 0x661960
<-- bmk_mutex_unlock 0x661990
<-- bmk_mutex_lock 0x661960
<-- bmk_cond_wait cond=0x661980
--> bmk_mutex_unlock 0x661960
--> bmk_scheduler_thread_block proc=0 thread=0x7ffe5dbd2690
<-- bmk_mutex_unlock 0x661960
--> bmk_simple_scheduler_get_next_thread
--> bmk_mutex_lock 0x661960
  t=0x1e6dff0 procmask=0x00000001 procid=0
<-- bmk_simple_scheduler_get_next_thread 0x1e6dff0
EXIT SWAP: 0x7ffe5dbd2690 => 0x1e6dff0
<-- bmk_scheduler_reschedule core=0
--> bmk_scheduler_reschedule core=0 active=0x1e6dff0
head t=0x1e6e440
  t=0x1e6e440 mask=0x00000002
  t=0x1e6dff0 mask=0x00000001
--> bmk_simple_scheduler_get_next_thread
  t=0x1e6e440 procmask=0x00000002 procid=0
  t=0x1e6dff0 procmask=0x00000001 procid=0
<-- bmk_simple_scheduler_get_next_thread 0x1e6dff0
  next_thread=0x1e6dff0 (active_t=0x1e6dff0)
--> reschedule: bmk_sys_wait_proc_event
--> bmk_sys_wait_proc_event
<-- bmk_mutex_lock 0x661960
--> bmk_mutex_unlock 0x661960
<-- bmk_mutex_unlock 0x661960
<-- thread2 wait req
--> thread2 send ack
--> bmk_mutex_lock 0x661990
<-- bmk_mutex_lock 0x661990
--> bmk_cond_signal cond=0x6619b0
--> bmk_scheduler_thread_unblock
--> bmk_sys_send_proc_event
<-- bmk_sys_send_proc_event
<-- bmk_scheduler_thread_unblock
<-- bmk_cond_signal cond=0x6619b0
--> bmk_mutex_unlock 0x661990
<-- bmk_mutex_unlock 0x661990
<-- bmk_sys_wait_proc_event
<-- reschedule: bmk_sys_wait_proc_event
<-- thread2 send ack
<-- bmk_scheduler_reschedule core=0
--> bmk_scheduler_reschedule core=0 active=0x1e6dff0
t=0x7ffe5dbd2690 next=0x1e6e440
head t=0x1e6e440
  t=0x7ffe5dbd2690 mask=0x00000001
  t=0x1e6e440 mask=0x00000002
  t=0x1e6dff0 mask=0x00000001
--> bmk_simple_scheduler_get_next_thread
  t=0x7ffe5dbd2690 procmask=0x00000001 procid=0
<-- bmk_simple_scheduler_get_next_thread 0x7ffe5dbd2690
  next_thread=0x7ffe5dbd2690 (active_t=0x1e6dff0)
--> bmk_sys_send_proc_event
<-- bmk_sys_send_proc_event
SWAP: 0x1e6dff0 => 0x7ffe5dbd2690
<-- bmk_scheduler_thread_block proc=0 thread=0x7ffe5dbd2690
--> bmk_mutex_lock 0x661990
<-- bmk_mutex_lock 0x661990
<-- bmk_cond_wait cond=0x6619b0
--> bmk_mutex_unlock 0x661990
<-- bmk_mutex_unlock 0x661990
--> thread2 wait req
--> bmk_mutex_lock 0x661990
<-- bmk_mutex_lock 0x661990
--> bmk_mutex_unlock 0x661990
<-- bmk_mutex_unlock 0x661990
<-- thread1 wait ack
--> thread1 send req
--> bmk_mutex_lock 0x661960
--> bmk_mutex_lock 0x661960
<-- bmk_mutex_lock 0x661960
--> bmk_scheduler_thread_block proc=0 thread=0x7ffe5dbd2690
--> bmk_cond_wait cond=0x661980
--> bmk_simple_scheduler_get_next_thread
--> bmk_mutex_unlock 0x661960
--> bmk_scheduler_thread_unblock
  t=0x1e6e440 procmask=0x00000002 procid=0
  t=0x1e6dff0 procmask=0x00000001 procid=0
<-- bmk_simple_scheduler_get_next_thread 0x1e6dff0
EXIT SWAP: 0x7ffe5dbd2690 => 0x1e6dff0
--> bmk_sys_send_proc_event
<-- bmk_scheduler_reschedule core=0
--> bmk_scheduler_reschedule core=0 active=0x1e6dff0
<-- bmk_sys_send_proc_event
t=0x7ffe5dbd2690 next=0x1e6e440
<-- bmk_scheduler_thread_unblock
head t=0x1e6e440
<-- bmk_mutex_unlock 0x661960
--> bmk_scheduler_thread_block proc=1 thread=0x7ffe5dbd22c0
  t=0x7ffe5dbd2690 mask=0x00000001
  t=0x1e6e440 mask=0x00000002
  t=0x1e6dff0 mask=0x00000001
--> bmk_simple_scheduler_get_next_thread
  t=0x7ffe5dbd2690 procmask=0x00000001 procid=0
<-- bmk_simple_scheduler_get_next_thread 0x7ffe5dbd2690
  next_thread=0x7ffe5dbd2690 (active_t=0x1e6dff0)
--> bmk_sys_send_proc_event
--> bmk_simple_scheduler_get_next_thread
<-- bmk_sys_send_proc_event
  t=0x1e6e440 procmask=0x00000002 procid=1
<-- bmk_simple_scheduler_get_next_thread 0x1e6e440
EXIT SWAP: 0x7ffe5dbd22c0 => 0x1e6e440
<-- bmk_scheduler_nonprimary::SWAP
SWAP: 0x1e6dff0 => 0x7ffe5dbd2690
head t=0x1e6dff0
--> bmk_simple_scheduler_get_next_thread
  t=0x1e6dff0 procmask=0x00000001 procid=1
  t=0x1e6e440 procmask=0x00000002 procid=1
<-- bmk_scheduler_thread_block proc=0 thread=0x7ffe5dbd2690
<-- bmk_simple_scheduler_get_next_thread 0x1e6e440
<-- bmk_mutex_lock 0x661960
--> bmk_scheduler_nonprimary::wait_proc_event
--> bmk_cond_signal cond=0x661980
--> bmk_scheduler_thread_unblock
--> bmk_sys_send_proc_event
<-- bmk_sys_send_proc_event
<-- bmk_scheduler_thread_unblock
<-- bmk_cond_signal cond=0x661980
--> bmk_mutex_unlock 0x661960
<-- bmk_mutex_unlock 0x661960
<-- thread1 send req
--> thread1 wait ack
--> bmk_mutex_lock 0x661990
<-- bmk_mutex_lock 0x661990
--> bmk_cond_wait cond=0x6619b0
--> bmk_sys_wait_proc_event
--> bmk_mutex_unlock 0x661990
<-- bmk_mutex_unlock 0x661990
--> bmk_scheduler_thread_block proc=0 thread=0x7ffe5dbd2690
--> bmk_simple_scheduler_get_next_thread
  t=0x7ffe5dbd22c0 procmask=0x00000002 procid=0
  t=0x1e6dff0 procmask=0x00000001 procid=0
<-- bmk_simple_scheduler_get_next_thread 0x1e6dff0
EXIT SWAP: 0x7ffe5dbd2690 => 0x1e6dff0
<-- bmk_scheduler_reschedule core=0
--> bmk_scheduler_reschedule core=0 active=0x1e6dff0
head t=0x7ffe5dbd22c0
  t=0x7ffe5dbd22c0 mask=0x00000002
  t=0x1e6dff0 mask=0x00000001
--> bmk_simple_scheduler_get_next_thread
  t=0x7ffe5dbd22c0 procmask=0x00000002 procid=0
  t=0x1e6dff0 procmask=0x00000001 procid=0
<-- bmk_simple_scheduler_get_next_thread 0x1e6dff0
  next_thread=0x1e6dff0 (active_t=0x1e6dff0)
--> reschedule: bmk_sys_wait_proc_event
